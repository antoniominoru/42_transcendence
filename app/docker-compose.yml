services:
  django:
    build:
      context: ./django
    restart: on-failure:5
    ports:
      - "8000:8000"
    volumes:
      - ./django:/app
    networks:
      - app-net
    env_file:
      - .env
    command:
      - sh
      - -c
      - |
        python3 manage.py makemigrations
        python3 manage.py migrate --noinput
        gunicorn -c gunicorn_config.py --reload
    depends_on:
      postgres:
        condition: service_healthy

  postgres:
    image: postgres:16.3-alpine
    container_name: ${DB_HOST}
    restart: on-failure:5
    environment:
      - POSTGRES_USER=${DB_USER}
      - POSTGRES_PASSWORD=${DB_PASSWORD}
      - POSTGRES_DB=${DB_NAME}
    ports:
      - "${DB_PORT}:${DB_PORT}"
    networks:
      - app-net
    healthcheck:
      test: pg_isready -U ${DB_USER}
      interval: 5s
      timeout: 5s
      retries: 5

  nginx:
    container_name: nginx
    image: nginx:alpine
    restart: on-failure:5
    ports:
      - "443:443"
    volumes:
      - ./django/static:/var/www/static
      - ./django/media:/var/www/media
      - ./nginx/certs:/etc/nginx/certs
      - ./nginx/conf.d:/etc/nginx/conf.d
    networks:
      - app-net
    depends_on:
      - django

networks:
  app-net:
    driver: bridge
